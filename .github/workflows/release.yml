name: Release

on:
  push:
    branches: [master]

jobs:
  platforms:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.platform-matrix.outputs.matrix }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Get Liferay Platforms
        id: platform-matrix
        run: |
          content=$(cat ./release.json)
          content=$(echo $content | jq -c .)
          echo "matrix={\"include\":$content}" >> $GITHUB_OUTPUT
  build:
    needs: [platforms]
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.platforms.outputs.matrix)}}
    steps:
      - name: Checkout Repository
        if: ${{ !matrix.branch }}
        uses: actions/checkout@v3
      - name: Checkout Specific
        if: ${{ matrix.branch }}
        uses: actions/checkout@v3
        with:
          ref: ${{ matrix.branch }}
      - name: Get Package Info
        run:  |
          echo "version=$(awk '/<version>/,/<\/version>/' pom.xml | head -n 1 | sed 's/^[[:space:]]*//g' | sed -n 's:.*<version>\(.*\)</version>.*:\1:p')" >> $GITHUB_OUTPUT
          echo "artifact=$(awk '/<artifactId>/,/<\/artifactId>/' pom.xml | head -n 1 | sed 's/^[[:space:]]*//g' | sed -n 's:.*<artifactId>\(.*\)</artifactId>.*:\1:p')" >> $GITHUB_OUTPUT
        id: info
      - name: Install Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '8'
      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build Artifact
        run: |
          cd ${{ github.workspace }}
          cwd=$(pwd)
          mvn -version
          mvn clean package
          mv ./target/${{ steps.info.outputs.artifact }}-${{ steps.info.outputs.version }}.jar $cwd/${{ steps.info.outputs.artifact }}-${{ steps.info.outputs.version }}-${{ matrix.name }}.jar
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.info.outputs.artifact }}-${{ steps.info.outputs.version }}-${{ matrix.name }}.jar
          path: ${{ steps.info.outputs.artifact }}-${{ steps.info.outputs.version }}-${{ matrix.name }}.jar
  upload:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Get Package Info
        run:  |
          echo "version=$(awk '/<version>/,/<\/version>/' pom.xml | head -n 1 | sed 's/^[[:space:]]*//g' | sed -n 's:.*<version>\(.*\)</version>.*:\1:p')" >> $GITHUB_OUTPUT
          echo "artifact=$(awk '/<artifactId>/,/<\/artifactId>/' pom.xml | head -n 1 | sed 's/^[[:space:]]*//g' | sed -n 's:.*<artifactId>\(.*\)</artifactId>.*:\1:p')" >> $GITHUB_OUTPUT
        id: info
      - name: Generate Changelog
        run: |
          awk '/## [0-9]/{p++} p; /## [0-9]/{if (p > 1) exit}' CHANGELOG.md | awk 'NR>2 {print last} {last=$0}' > RELEASE.md
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ${{ github.workspace }}/artifacts
      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: "v${{ steps.info.outputs.version }}"
          body_path: RELEASE.md
          files: |
            **/*.jar