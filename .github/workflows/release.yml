name: Release

on:
  push:
    branches: [master]

jobs:
  platforms:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.platform-matrix.outputs.matrix }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Get Liferay Platforms
        id: platform-matrix
        run: |
          content=$(cat ./release.json)
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          echo "::set-output name=matrix::{\"include\":$content}"
  release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{steps.create_release.outputs.upload_url}}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Generate Changelog
        run: |
          awk '/## [0-9]/{p++} p; /## [0-9]/{if (p > 1) exit}' CHANGELOG.md | awk 'NR>2 {print last} {last=$0}' > RELEASE.md
      - name: Get Package Info 
        run:  |
          echo "::set-output name=package::$(sed -n -e 's/^Bundle-SymbolicName: //p' bnd.bnd)"
          echo "::set-output name=version::$(sed -n -e 's/^Bundle-Version: //p' bnd.bnd)"
        id: info
      - name: Create Release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: v${{ steps.info.outputs.version }}
          tag_name: v${{ steps.info.outputs.version }}
          body_path: ./RELEASE.md
        env:
          GITHUB_TOKEN: ${{ github.token }}
  build:
    needs: [platforms,release]
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.platforms.outputs.matrix)}}
    steps:
      - name: Checkout Repository
        if: ${{ !matrix.branch }}
        uses: actions/checkout@v2
      - name: Checkout Specific
        if: ${{ matrix.branch }}
        uses: actions/checkout@v2
        with:
          ref: ${{ matrix.branch }}
      - name: Get Package Info
        run:  |
          echo "::set-output name=package::$(sed -n -e 's/^Bundle-SymbolicName: //p' bnd.bnd)"
          echo "::set-output name=version::$(sed -n -e 's/^Bundle-Version: //p' bnd.bnd)"
        id: info
      - name: Install Java 8
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '8'
      - name: Build with Liferay Blade CLI
        shell: bash
        run: |
          cd ${{ github.workspace }}
          cwd=$(pwd)
          java -version
          git submodule update --init --recursive
          curl -L https://raw.githubusercontent.com/liferay/liferay-blade-cli/master/cli/installers/local | sh
          echo 'export PATH="$PATH:$HOME/jpm/bin"' >> ~/.bash_profile
          source ~/.bash_profile
          blade version
          blade init -v ${{ matrix.platform }} workspace
          cd workspace/modules
          modules=$(pwd)
          mkdir onlyoffice-liferay
          cd $cwd
          rsync -av --exclude='workspace' ./ ./workspace/modules/onlyoffice-liferay
          cd $modules
          blade gw jar
          cd ./onlyoffice-liferay/build/libs
          mv ${{ steps.info.outputs.package }}-${{ steps.info.outputs.version }}.jar $cwd/
      - name: Upload Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ${{ steps.info.outputs.package }}-${{ steps.info.outputs.version }}.jar
          asset_name: ${{ steps.info.outputs.package }}-${{ steps.info.outputs.version }}-${{ matrix.name }}.jar
          asset_content_type: application/java-archive